(dp1
S'output'
p2
S''
sS'layer'
p3
S'/var/www/web2py/applications/favoritesmanager/controllers/bookmark.py'
p4
sS'code'
p5
S"# -*- coding:utf-8 -*-\n'''\nController para bookmarks onde terao todas as funcoes para trabalhar\ncom os marcadores\n'''\ndef index():\n\tredirect(URL('new'))\n\n@auth.requires_login()\t\ndef new():\n\timport urllib\n\tform = SQLFORM(db.bookmarks, fields=['name','url','note','keywords'])\n\t\n\tif form.accepts(request.vars, session):\n\t\tdb(db.bookmarks).update(user = auth.user.email, creation = request.now)\n\t\tresponse.flash = T('New bookmark was created !')\n\telif form.errors:\n\t\tresponse.flash = T('Oops, look who\\'s wrong !')\n\n\treturn {'form':form}\n\t\n@auth.requires_login()\ndef show():\n\tmymarks = db().select(db.bookmarks, orderby=db.bookmarks.creation)\n\treturn {'marks':mymarks}\n\n@auth.requires_login()\ndef remove():\n\tif request.args(0):\n\t\tdb(db.bookmarks.id == request.args(0)).delete()\n\t\tredirect(URL('bookmark','show'));\n\telse:\n\t\tredirect(URL('bookmark','show'))\n\ndef edit():\n\trec = db.bookmarks(request.args(0)) or redirect(URL('show'))\n\tform = SQLFORM(db.bookmarks, rec, fields=['name','url'])\n\t\n\tif form.accepts(request.vars, session):\n\t\tredirect(URL('bookmark','show'))\n\telif form.errors:\n\t\tresponse.flash = T('Oops, look whos wrong !')\n\n\treturn {'form':form}\n\n\nresponse._vars=response._caller(show)\n"
p6
sS'snapshot'
p7
(dp8
sS'traceback'
p9
S'Traceback (most recent call last):\n  File "/var/www/web2py/gluon/restricted.py", line 192, in restricted\n    exec ccode in environment\n  File "/var/www/web2py/applications/favoritesmanager/controllers/bookmark.py", line 47, in <module>\n  File "/var/www/web2py/gluon/globals.py", line 145, in <lambda>\n    self._caller = lambda f: f()\n  File "/var/www/web2py/gluon/tools.py", line 2462, in f\n    return action(*a, **b)\n  File "/var/www/web2py/applications/favoritesmanager/controllers/bookmark.py", line 24, in show\n    mymarks = db().select(db.bookmarks, orderby=db.bookmarks.creation)\n  File "/var/www/web2py/gluon/dal.py", line 5481, in select\n    return self.db._adapter.select(self.query,fields,attributes)\n  File "/var/www/web2py/gluon/dal.py", line 1179, in select\n    sql = self._select(query,fields,attributes)\n  File "/var/www/web2py/gluon/dal.py", line 1082, in _select\n    raise SyntaxError, \'Set: no tables selected\'\nSyntaxError: Set: no tables selected\n'
p10
s.